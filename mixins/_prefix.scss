/* VERSION 1 ***********************************************/
/*
* Add prefix for property css
*
* @param $name : name of property
* @param $value : value of property
*
* @example
* - Usage:
* .foo {
*    @inlucde prefix(transform, translateY(-50%));
* }
*/
@mixin prefix($name, $value) {
    -webkit-#{$name}: $value;
    -moz-#{$name}: $value;
    -ms-#{$name}: $value;
    -o-#{$name}: $value;
    #{$name}: $value;
}

/* VERSION 2 ***********************************************/
/*
* Add prefix for property css
* 
* @param {String} $property - Property name
* @param {*} $value - Property value
* @param {List} $prefixes (()) - List of prefixes to print
* @example
* - Usage:
* .foo {
*   @include prefix(transform, rotate(45deg), webkit ms);
* }
* - Output:
* .foo {
*   -webkit-transform: rotate(45deg);
*   -ms-transform: rotate(45deg);
*   transform: rotate(45deg);
* }
*/
@mixin prefix($property, $value, $prefixes: ()) {
    @each $prefix in $prefixes {
        #{'-' + $prefix + '-' + $property}: $value;
    }

    // Output standard non-prefixed declaration
    #{$property}: $value;
}

/* VERSION 3 : Avanced version ****************************************/
/*
* Mixin to prefix several properties at once
* 
* @param {List} $prefixes (()) - List of prefixes to print
* @example 
* - Usage:
* .foo {
*   @include prefix((
*     column-count: 3,
*     column-gap: 1.5em,
*     column-rule: 2px solid hotpink
*   ), webkit moz);
* }
* - Output:
* .foo {
*   -webkit-column-count: 3;
*   -moz-column-count: 3;
*   column-count: 3;
*   -webkit-column-gap: 1.5em;
*   -moz-column-gap: 1.5em;
*   column-gap: 1.5em;
*   -webkit-column-rule: 2px solid hotpink;
*   -moz-column-rule: 2px solid hotpink;
*   column-rule: 2px solid hotpink;
*}
*/
@mixin prefix($declarations, $prefixes: ()) {
    @each $property, $value in $declarations {
        @each $prefix in $prefixes {
            #{'-' + $prefix + '-' + $property}: $value;
        }

        // Output standard non-prefixed declaration
        #{$property}: $value;
    }
}
